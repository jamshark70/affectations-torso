* Sections: use of motion [12/12]
** DONE T2000-low tones
*** Vertical motion in left or right two columns
*** Need: threshold? Or trigger envelope by y-velocity?
** DONE T2001-dummy wait for solo
** DONE T2010-stephen solo
*** Count # of points with mag > a threshold
*** Wild sweeps: move whole body
*** Not sure yet how to do subtler modulation
**** Maybe hands only, on the sides of the window?
*** Two point kmeans clustering
**** When moving a hand slowly, the clusters are located close together
**** When moving the whole body, one cluster goes up and the other cluster goes down
** DONE T2020-plus Ilana
*** Same movement vocabulary
*** Transition: centroid goes up into top row?
*** (That's tricky -- need to move hand while keeping the body still -- which makes it a good trigger!)
** DONE T2030-energy-exch
*** Sweep left and right for "throws"
** DONE T2040-ensemble
*** Bursts of activity from magnitude (should slow quickly when I slow)
*** Track left and right magnitude
    Left = burst in \thr
    Right = burst in \fastnotes
** DONE T2050-Ilana to floor
*** Raise arm
*** New note for motion -- tough, want to keep movement slow
*** Pipe some motion control into rotSynth
** DONE T2060-Fast ensemble
*** Suddenly move fast
*** DONE NEEDS TO BE MUCH LOUDER
** DONE T2070-Slow down
*** Move centroid into lowest third
** DONE T2080-Ilana up
*** Raise arm
*** DONE Sweep up should play 1 note
*** DONE mod_lev is wrong
** DONE T2090-Ilana solo
*** Little bit too sensitive
*** Stop? How to measure that? (Overall magnitude drops I guess)
*** Move a little to start a bell gesture: Schmidt trigger with decay
*** POSTPONED Visual indicator when Schmidt trigger resets?
** DONE T2100-Duet
*** DONE Control chord dynamics with y and/or x position
**** Video part is setting the parameter, but I don't hear any effect
*** DONE Run chord process under its own power during fadeout
*** DONE Trigger chord: Stay below a point for awhile, then rise for awhile
*** DONE Fade out? (Maybe walk away from the machine)
**** DONE Reset master level when resuming play
**** DONE Event trigger fired but the mixer GUI didn't change ???
* *Lighting matters* - everything is more sensitive when it's bright
* Bugs [2013-01-24 Thu]
** DONE Wild gesture doesn't always fire
** DONE T2060 is still way too quiet
** TODO T2060 was hard to trigger
** DONE Final section trigger is very very very sensitive
** DONE Did I actually hear bellfx?
* Bugs [2013-01-26 Sat]
** TODO Why does the duet melody get stuck on B-C#?
** DONE ERROR: Qt: You can not use this Qt functionality in the current thread. Try scheduling on AppClock instead.
* Bugs [2013-01-30 Wed]
** TODO 2070 is too loud, not a smooth transition
** DONE Duet is still not triggering chords right
* TODO Write performance notes (what to do in each section)
* README
  :PROPERTIES:
  :EXPORT_TITLE: /Affectations/Torso/
  :EXPORT_AUTHOR: H. James Harkins
  :EXPORT_OPTIONS: toc:nil ^:nil
  :END:

** /Affectations/Torso/
   *H. James Harkins* \\
   Composed 2010, revised 2013 \\
   For computer, with gestural control by webcam

This repository contains the code for my composition
/Affectations/Torso/. I am publishing it as supplementary material for
an article, "/Affectations/Torso/: A case study in future-proofing
interactive computer music through robust code design," appearing in
vol. 11 of /Emille/, the journal of the Korean Electro-Acoustic Music
Society.

*** Code relevant to the article
**** Trigger mediator

The article discusses a strategy of handling triggers from multiple
user interfaces. "Listing 4" is the central code example. It is, in
fact, a new version of the Mediator that is actually used in
/Torso/. The new version printed in the article is a clean,
streamlined implementation; the corresponding code in this repository
is somewhat messier. This is common in programming: the first
implementation is flawed, and the flaws can be addressed in subsequent
/refactoring/. It made more sense in the article to present the
clearest, easiest-to-understand version.

The actual implementation in the composition is found in two places:

- =./common/common-defs.scd=, lines 730-757 \\
  The receiver for triggers from /vvvv/, left over from the original
  /Affectations/. The /vvvv/ code is no longer used, but I left it in
  to avoid the risk of changing the structure. This is the parent
  prototype for the responders in =main_seq.scd=.

- =./torso/main_seq.scd=, lines 50-141 \\
  The responder for "segment" (section) triggers. See especially
  =segActive=, which registers an action to take when the next section
  trigger arrives. The action is expected to be a Function, meaning
  that the strategy here is less object-oriented than that described
  in the article. The action is saved as =~segTrigAction=, which then
  becomes the central triggering location. \\
  Additional code in this block handles "event triggers," which occur
  within sections but don't advance to the next section. They are
  handled similarly, except for the additional logic to allow multiple
  event triggers with different IDs to be registered simultaneously.

**** Video control

The video analyzers are found in =./torso/tracking-defs.scd=. The Pure
Data webcam patch is in =./install/Extensions/Video=.

*** Installation

**** Required software:

- SuperCollider v. 3.6.6 or later. Please use the SuperCollider IDE to
  run the piece. The SCVim or gedit environments will /not/
  work. [[http://supercollider.sourceforge.net/downloads/]]

- Pure Data v. 0.43.3-extended-20121002 or
  later. [[http://puredata.info/downloads/pd-extended]]

The piece was developed in Linux. It should run equally well in Mac
OSX. It uses UNIX shell commands to open Pure Data. These commands
will not work in Windows. Contact the composer via
[[http://www.dewdrop-world.net]].

**** SuperCollider extensions:

Copy =./install/Extensions= of this repository into the SuperCollider
user extension directory. If you are not sure of this location, run
the following within SuperCollider:

#+begin_src {} -i :exports code
Platform.userExtensionDir;
#+end_src

The Extensions directory in this repository contains specific versions
of two sets of [[http://doc.sccode.org/Guides/UsingQuarks.html][Quarks]]. If you have already installed these quarks
(cruciallib and dewdrop_lib), you will get "Duplicate class" errors
when starting SC or recompiling the class library. If this occurs, you
should uninstall cruciallib and dewdrop_lib, using either =Quarks.gui=
or the following code:

#+begin_src {} -i :exports code
Quarks.uninstall("dewdrop_lib");
Quarks.uninstall("cruciallib");
#+end_src

*** Performance materials

As of this writing, no performance score exists. This lack may be
remedied at some future date. Contact the composer via
[[http://www.dewdrop-world.net]].
