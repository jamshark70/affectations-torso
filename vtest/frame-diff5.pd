#N canvas 630 37 713 607 10;
#X obj 127 4 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X obj 127 173 #rgb_to_greyscale;
#X obj 55 143 shunt;
#X obj 82 87 tgl 15 1 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X text 41 67 blur on/off;
#X text 37 1 camera on/off;
#X obj 127 82 #camera 0;
#X msg 200 54 api libv4l1 \, device 0;
#X obj 200 30 loadbang;
#X obj 127 144 #fastblur (2 2);
#X obj 56 575 #out window;
#X obj 127 111 #downscale_by 4 smoothly;
#X obj 351 26 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 6400 1;
#X obj 348 61 s noise_reduction;
#X obj 127 237 #motion_detection;
#X obj 201 208 r noise_reduction;
#X obj 129 399 var.#;
#X obj 325 407 #moment 1;
#X obj 325 262 #t;
#X obj 152 465 #slice;
#N canvas 307 118 743 541 iter2d 0;
#X obj 39 14 inlet;
#X obj 140 115 inlet;
#X obj 378 30 inlet;
#X obj 146 198 + 1;
#X obj 299 378 + 1;
#X obj 220 267 f;
#X obj 268 184 inlet;
#X obj 316 255 inlet;
#X obj 39 101 f;
#X obj 220 304 moses 999;
#X obj 209 443 pack;
#X obj 220 344 t f f;
#X obj 209 479 outlet;
#X obj 294 481 outlet;
#X msg 384 248 bang;
#X obj 39 167 moses 999;
#X obj 39 136 f;
#X msg 242 417 bang;
#X obj 39 218 t b f f;
#X obj 39 41 route bang float list;
#X text 4 251 3 trigs: 1-increment 2-pack (R) 3-bang inner loop;
#X text 351 344 2 trigs: 1-pack>out 2-increment;
#X text 251 319 moses exit --> bang outer loop;
#X text 379 446 2 outlets: 1-series of lists (x0 y0) (x0 y1) ... 2-bang
when all done;
#X text 462 263 This would be a simple nested loop in SC. Graphical
patching.... urrggghhh...;
#X obj 432 38 inlet;
#X text 462 62 6 inlets: 1: bang=go float=set outer loop start list=outer
start \, end \, inner start \, end \, step size 2:set outer loop end
3:set inner loop start 4:set inner loop end 5:set step size MUST bang
left inlet or no output;
#X obj 121 73 unpack f f f f f f;
#X connect 0 0 19 0;
#X connect 1 0 15 1;
#X connect 2 0 3 1;
#X connect 3 0 16 1;
#X connect 4 0 9 0;
#X connect 5 0 9 0;
#X connect 6 0 5 1;
#X connect 7 0 9 1;
#X connect 8 0 16 0;
#X connect 9 0 11 0;
#X connect 9 1 14 0;
#X connect 10 0 12 0;
#X connect 11 0 4 0;
#X connect 11 1 10 0;
#X connect 14 0 16 0;
#X connect 15 0 18 0;
#X connect 15 1 17 0;
#X connect 16 0 15 0;
#X connect 17 0 13 0;
#X connect 18 0 5 0;
#X connect 18 1 10 1;
#X connect 18 2 3 0;
#X connect 19 0 8 0;
#X connect 19 1 8 1;
#X connect 19 2 27 0;
#X connect 25 0 4 1;
#X connect 27 0 8 1;
#X connect 27 1 15 1;
#X connect 27 2 5 1;
#X connect 27 3 9 1;
#X connect 27 4 3 1;
#X connect 27 5 4 1;
#X restore 141 324 pd iter2d;
#X obj 10 238 loadbang;
#X obj 141 264 #t;
#X msg 141 293 bang;
#X obj 168 380 #import (2);
#X obj 168 406 #t;
#X obj 325 432 #to_list;
#X obj 325 551 list append;
#N canvas 808 75 450 300 send_osc 0;
#X obj 96 43 inlet;
#X text 148 43 list;
#X obj 96 76 prepend send /coord;
#X obj 96 122 packOSC;
#X obj 96 209 udpsend;
#X msg 185 149 connect 127.0.0.1 57120;
#X obj 185 121 loadbang;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X restore 325 580 pd send_osc;
#X obj 394 508 pack f f;
#X obj 394 300 #fold + \, seed (0);
#X obj 394 398 #to_float;
#X obj 394 443 t f b;
#X obj 394 360 #fold +;
#X obj 127 30 t f f;
#X obj 538 215 route 1;
#X msg 11 264 0 320 0 240 64 48;
#X obj 185 434 # + (48 64);
#X obj 394 330 #redim (48);
#X obj 421 470 counter 1 25;
#X obj 127 203 #reverse 1;
#X obj 141 351 t b l;
#X text 534 192 reset [counter] on 'go';
#N canvas 0 0 566 432 recv_osc_toggle 0;
#X obj 68 33 udpreceive 57122;
#X obj 68 69 unpackOSC;
#X obj 68 106 pipelist;
#X obj 68 189 outlet;
#X obj 163 189 outlet;
#X obj 68 149 routeOSC /onOffSwitch /noiseReduction /handshake;
#X obj 258 301 packOSC;
#X obj 258 388 udpsend;
#X msg 330 349 connect 127.0.0.1 57120;
#X obj 330 316 loadbang;
#X text 411 160 handshaking at init;
#X obj 258 189 t b;
#X msg 258 228 /handshakeReply;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 2 0 5 0;
#X connect 5 0 3 0;
#X connect 5 1 4 0;
#X connect 5 2 11 0;
#X connect 6 0 7 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 11 0 12 0;
#X connect 12 0 6 0;
#X restore 161 3 pd recv_osc_toggle;
#X obj 127 55 metro 150;
#X text 340 94 note: 125-130 ms is a lower bound for osc traffic here
;
#X connect 0 0 34 0;
#X connect 1 0 40 0;
#X connect 2 0 1 0;
#X connect 2 1 9 0;
#X connect 3 0 2 1;
#X connect 6 0 11 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 11 0 2 0;
#X connect 12 0 13 0;
#X connect 14 0 22 0;
#X connect 14 0 10 0;
#X connect 15 0 14 1;
#X connect 16 0 19 0;
#X connect 17 0 26 0;
#X connect 18 0 17 0;
#X connect 18 1 30 0;
#X connect 19 0 18 0;
#X connect 20 0 41 0;
#X connect 21 0 36 0;
#X connect 22 0 23 0;
#X connect 22 1 16 1;
#X connect 23 0 20 0;
#X connect 24 0 25 0;
#X connect 25 0 19 1;
#X connect 25 1 37 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 29 0 27 1;
#X connect 30 0 38 0;
#X connect 31 0 32 0;
#X connect 32 0 29 0;
#X connect 32 1 39 0;
#X connect 33 0 31 0;
#X connect 34 0 44 0;
#X connect 34 1 35 0;
#X connect 35 0 39 2;
#X connect 36 0 20 0;
#X connect 37 0 19 2;
#X connect 38 0 33 0;
#X connect 39 0 29 1;
#X connect 40 0 14 0;
#X connect 41 0 16 0;
#X connect 41 1 24 0;
#X connect 43 0 0 0;
#X connect 43 1 12 0;
#X connect 44 0 6 0;
